generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  expenses      Expense[]
  groups        GroupMember[]
  payments      Payment[]
  receivables   Payment[]  @relation("Receiver")
}

model Group {
  id          String    @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  members     GroupMember[]
  expenses    Expense[]
}

model GroupMember {
  id        String    @id @default(cuid())
  role      String    @default("member") // admin or member
  userId    String
  groupId   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  group     Group     @relation(fields: [groupId], references: [id], onDelete: Cascade)

  @@unique([userId, groupId])
}

model Expense {
  id          String    @id @default(cuid())
  title       String
  amount      Float
  date        DateTime
  description String?
  imageUrl    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId      String
  groupId     String?
  
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  group       Group?    @relation(fields: [groupId], references: [id], onDelete: SetNull)
  payments    Payment[]
}

model Payment {
  id          String    @id @default(cuid())
  amount      Float
  status      String    @default("pending") // pending, completed
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  expenseId   String
  payerId     String
  receiverId  String

  expense     Expense   @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  payer       User      @relation(fields: [payerId], references: [id])
  receiver    User      @relation("Receiver", fields: [receiverId], references: [id])
} 